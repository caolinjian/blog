[{"title":"backbone paginator","url":"http://caolinjian.github.io/blog/2016/05/07/backbone-paginator/","content":"<h2 id=\"一个Backbone项目中使用的简单组件\"><a href=\"#一个Backbone项目中使用的简单组件\" class=\"headerlink\" title=\"一个Backbone项目中使用的简单组件\"></a>一个Backbone项目中使用的简单组件</h2><h3 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h3><p>分页最基本的需要4个参数,size,page,total已经pageChange. 这里的showPageA表示最多显示的按钮个数,<br>pageChange的函数在生成实力时传入.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> PanigatorModel = Backbone.Model.extend(&#123;</span><br><span class=\"line\">    defaults: &#123;</span><br><span class=\"line\">        size: <span class=\"number\">5</span>,</span><br><span class=\"line\">        currentPage: <span class=\"number\">1</span>,<span class=\"comment\">//第一页从1开始不是0</span></span><br><span class=\"line\">        showPageA: <span class=\"number\">5</span>,<span class=\"comment\">//最多显示5个</span></span><br><span class=\"line\">        total: <span class=\"number\">10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h3><p>改变参数时变化totalPage和需要显示的按钮showList.<br>点击按钮时触发pageChange(请求数据)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> PanigatorView = Backbone.View.extend(&#123;</span><br><span class=\"line\">    el: <span class=\"string\">'.pager'</span>,</span><br><span class=\"line\">    events: &#123;</span><br><span class=\"line\">        <span class=\"string\">'click .pageA'</span>: <span class=\"string\">'changePage'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    template: _.template($(<span class=\"string\">'#paginator'</span>).html()),</span><br><span class=\"line\">    initialize: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        self.setTotalPage();</span><br><span class=\"line\">        self.model.bind(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            self.setTotalPage();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    changePage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(ev.currentTarget).hasClass(<span class=\"string\">'disable'</span>)||$(ev.currentTarget).hasClass(<span class=\"string\">'pageActive'</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.model.attributes.pageChange($(ev.currentTarget).data(<span class=\"string\">'index'</span>))</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    render: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">page</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$el.html(<span class=\"keyword\">this</span>.template(<span class=\"keyword\">this</span>.model.toJSON()));</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setTotalPage: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> showList = [];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> totalPage = <span class=\"built_in\">Math</span>.floor((<span class=\"keyword\">this</span>.model.get(<span class=\"string\">'total'</span>) - <span class=\"number\">1</span>) / <span class=\"keyword\">this</span>.model.get(<span class=\"string\">'size'</span>)) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> currentPage = <span class=\"keyword\">this</span>.model.get(<span class=\"string\">'currentPage'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> showPageA = <span class=\"keyword\">this</span>.model.get(<span class=\"string\">'showPageA'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (totalPage &lt;= showPageA || currentPage &lt; <span class=\"built_in\">Math</span>.floor(showPageA / <span class=\"number\">2</span>) + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= totalPage &amp;&amp; showList.length &lt;= showPageA - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">                showList.push(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentPage &gt; totalPage - <span class=\"built_in\">Math</span>.ceil(showPageA / <span class=\"number\">2</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = totalPage; showList.length &lt;= showPageA - <span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">                showList.unshift(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = currentPage - <span class=\"built_in\">Math</span>.floor(showPageA / <span class=\"number\">2</span>); i &lt;= currentPage + <span class=\"built_in\">Math</span>.ceil(showPageA / <span class=\"number\">2</span>) - <span class=\"number\">1</span> &amp;&amp; showList.length &lt;= showPageA - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">                showList.push(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.model.set(<span class=\"string\">'totalPage'</span>, totalPage);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.model.set(<span class=\"string\">'showList'</span>, showList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h3><p><a href=\"https://github.com/caolinjian/express-myapp\" target=\"_blank\" rel=\"external\">https://github.com/caolinjian/express-myapp</a> 这是一个简单的express应用在node版本0.10下运行<br>    $ node bin/www</p>\n<p>然后打开 <a href=\"http://127.0.0.1:4000/html/backbone-pager.html\" target=\"_blank\" rel=\"external\">http://127.0.0.1:4000/html/backbone-pager.html</a> 对应的html文件在<br><a href=\"https://github.com/caolinjian/express-myapp/blob/master/public/html/backbone-pager.html\" target=\"_blank\" rel=\"external\">https://github.com/caolinjian/express-myapp/blob/master/public/html/backbone-pager.html</a><br>banckbone-paginator的组件在 <a href=\"https://github.com/caolinjian/express-myapp/blob/master/public/javascripts/backbone-paginator.js\" target=\"_blank\" rel=\"external\">https://github.com/caolinjian/express-myapp/blob/master/public/javascripts/backbone-paginator.js</a></p>\n"},{"title":"Hello World","url":"http://caolinjian.github.io/blog/2016/03/23/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"git常用命令整理","url":"http://caolinjian.github.io/blog/2015/03/05/git常用命令整理/","content":"<p>好记性不如烂博客,整理了下一些常用的命令<br>之后有用到更多的再慢慢更新</p>\n<h2 id=\"配置全局变量\"><a href=\"#配置全局变量\" class=\"headerlink\" title=\"配置全局变量\"></a>配置全局变量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;Your Name&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>\n<p><code>$ git config --global color.ui true</code>显示颜色<br><a id=\"more\"></a></p>\n<h2 id=\"配置别名\"><a href=\"#配置别名\" class=\"headerlink\" title=\"配置别名\"></a>配置别名</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global alias.st status</span><br><span class=\"line\">$ git config --global alias.co checkout</span><br><span class=\"line\">$ git config --global alias.ci commit</span><br><span class=\"line\">$ git config --global alias.br branch</span><br></pre></td></tr></table></figure>\n<p><code>$ git config --global alias.last &#39;log -1&#39;</code>最近一次提交<br>配置的内容都保存在<code>.git/config</code>中的</p>\n<h2 id=\"查看日志\"><a href=\"#查看日志\" class=\"headerlink\" title=\"查看日志\"></a>查看日志</h2><p><code>$ git log --pretty=oneline</code> 按Q退出<br><code>$ git log --stat -n</code> <code>--stat</code>显示简要的增改行数统计,每次提交文件的变更统计<code>-n</code>前n条<br><code>$ git log --pretty=format:&quot; &quot;</code>控制显示的记录格式，常用的格式占位符写法及其代表的意义如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选项\t 说明</span><br><span class=\"line\">%H\t提交对象（commit）的完整哈希字串</span><br><span class=\"line\">%h\t提交对象的简短哈希字串</span><br><span class=\"line\">%T\t树对象（tree）的完整哈希字串</span><br><span class=\"line\">%t\t树对象的简短哈希字串</span><br><span class=\"line\">%P\t父对象（parent）的完整哈希字串</span><br><span class=\"line\">%p\t父对象的简短哈希字串</span><br><span class=\"line\">%an\t作者（author）的名字</span><br><span class=\"line\">%ae\t作者的电子邮件地址</span><br><span class=\"line\">%ad\t作者修订日期（可以用 -date= 选项定制格式）</span><br><span class=\"line\">%ar\t作者修订日期，按多久以前的方式显示</span><br><span class=\"line\">%cn\t提交者(committer)的名字</span><br><span class=\"line\">%ce\t提交者的电子邮件地址</span><br><span class=\"line\">%cd\t提交日期</span><br><span class=\"line\">%cr\t提交日期，按多久以前的方式显示</span><br><span class=\"line\">%s\t提交说明</span><br></pre></td></tr></table></figure>\n<p>如<code>$ git log --pretty=format:&quot;%h -%an,%ar : %s&quot; -3</code><br>利用上面的配置别名咱们可以<br>git config –global alias.lg “log –color –graph<br>–pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit”<br>然后<code>git lg</code> 记得用<code>q</code>退出<br><code>$ gitk</code>打开图形界面<br><code>$ git log --help</code>查看帮助</p>\n<h2 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h2><p><code>$ git reset --hard HEAD^</code><br>用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。<br><code>$ git reset --hard 3628164</code>可以指定回到某个版本,不用写全版本号。<br><code>$ git reflog</code>可以记录之前的命令，回退之后想要回到新版本可以用它来查到版本号</p>\n<h3 id=\"撤销修改\"><a href=\"#撤销修改\" class=\"headerlink\" title=\"撤销修改\"></a>撤销修改</h3><p><code>$ git checkout -- readme.txt</code>文件在缓存区时可撤销修改<br><code>$ git rm</code>掉的也可以用上述命令回复</p>\n<h2 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h2><p>创建SSH key<code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></p>\n<h3 id=\"关联远程仓库\"><a href=\"#关联远程仓库\" class=\"headerlink\" title=\"关联远程仓库\"></a>关联远程仓库</h3><p><code>$ git remote add origin git@github.com:***/***.git</code></p>\n<h3 id=\"推送远程仓库\"><a href=\"#推送远程仓库\" class=\"headerlink\" title=\"推送远程仓库\"></a>推送远程仓库</h3><p><code>$ git push -u origin master</code>第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>\n<h2 id=\"分支管理\"><a href=\"#分支管理\" class=\"headerlink\" title=\"分支管理\"></a>分支管理</h2><p><code>$ git branch -a</code>查看所有分支 -r查看远程分支<br><code>$ git checkout -b dev</code>创建<br><code>$ git merge dev</code>合并<br><code>$ git branch -d dev</code>删除</p>\n<h3 id=\"贮藏当前未提交的工作\"><a href=\"#贮藏当前未提交的工作\" class=\"headerlink\" title=\"贮藏当前未提交的工作\"></a>贮藏当前未提交的工作</h3><p><code>$ git stash``\n</code>$ git stash list<code>查看</code>$ git stash pop<code>恢复并删除</code>$ git stash apply stash@{0}`恢复到指定空间</p>\n<h3 id=\"多人协作\"><a href=\"#多人协作\" class=\"headerlink\" title=\"多人协作\"></a>多人协作</h3><p><code>$ git remote -v</code>查看远程库<br><code>$ git checkout -b dev origin/dev</code>创建远程分支对应的本地分支<br><code>$ git branch --set-upstream branch-name origin/branch-name</code>建立关联</p>\n<h2 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h2><p><code>$ git tag v1.0</code>创建标签，标签是关联到当前commit上的。加上commit id可以关联到对应commit上<br><code>$ git tag</code> 查看标签<br><code>$ git tag -a v0.1 -m &quot;version 0.1 released&quot; 3628164</code>用-a指定标签名，-m指定说明文字<br><code>$ git tag -d v0.1</code>删除标签<br><code>git push origin &lt;tagname&gt;</code>推送标签<br><code>$ git push origin --tags</code>推送所有标签<br>删除远程标签要先删除本地再<code>$ git push origin :refs/tags/v0.9</code></p>\n<h2 id=\"其他常用命令\"><a href=\"#其他常用命令\" class=\"headerlink\" title=\"其他常用命令\"></a>其他常用命令</h2><p><code>$ git commit -C HEAD -a —amend</code>复用HEAD留言，增补提交<br><code>$ git blame hello.html</code> 查明谁修改了代码 你也可以用”-L”参数在命令(blame)中指定开始和结束行:<br><code>$ git blame -L 12,+10 hello.html</code> //12到22行<br><code>$ git gc</code>回收垃圾<br><code>$ git push --delete origin dev</code>删除远程分支<br><code>git remote add company  https://github.com/....</code>关联多个远程仓库</p>\n<h3 id=\"提交到多个远程仓库\"><a href=\"#提交到多个远程仓库\" class=\"headerlink\" title=\"提交到多个远程仓库\"></a>提交到多个远程仓库</h3><p><code>.git/config</code>配置url`</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote &quot;all&quot;]  </span><br><span class=\"line\">    url = https://github.com/caolinijan/test.git  </span><br><span class=\"line\">    url = https://git.oschina.net/caolinjian/test.git</span><br></pre></td></tr></table></figure>\n<p><code>$ git push test --all</code></p>\n"},{"title":"python3豆瓣爬虫","url":"http://caolinjian.github.io/blog/2015/02/18/python3豆瓣爬虫/","content":"<p>大年30没事干，也抢不到红包，于是写写代码娱乐娱乐，复习复习最近学的python。</p>\n<p>源码如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#---------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">#   程序：豆瓣相册爬虫</span></span><br><span class=\"line\"><span class=\"comment\">#   版本： 1.3</span></span><br><span class=\"line\"><span class=\"comment\">#   作者：Cao Linjian</span></span><br><span class=\"line\"><span class=\"comment\">#   日期：2015-02-18</span></span><br><span class=\"line\"><span class=\"comment\">#   语言：Python 3.3</span></span><br><span class=\"line\"><span class=\"comment\">#   说明：输入影人图片地址或者相册地址</span></span><br><span class=\"line\"><span class=\"comment\">#---------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> os,re,time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> bs <span class=\"comment\">#第3方库，解析html</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> multiprocessing <span class=\"keyword\">import</span> Pool</span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\">socket.setdefaulttimeout(<span class=\"number\">10</span>)</span><br><span class=\"line\">abs = os.path.abspath(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">targetDir = os.path.join(abs,<span class=\"string\">'pic'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.isdir(targetDir):</span><br><span class=\"line\">    os.mkdir(targetDir)</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>:<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.6)'</span></span><br><span class=\"line\">        <span class=\"string\">' Gecko/20091201 Firefox/3.5.6'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#生成的文件名</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">destFile</span><span class=\"params\">(path)</span>:</span></span><br><span class=\"line\">    pos = path.rindex(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">    t = os.path.join(targetDir, path[pos+<span class=\"number\">1</span>:])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span><span class=\"params\">(img)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        print(img)</span><br><span class=\"line\">        wq = urllib.request.Request(img,headers = headers)</span><br><span class=\"line\">        data = urllib.request.urlopen(wq).read()</span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(destFile(img), <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(data)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> urllib.error.URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> isinstance(e.reason,socket.timeout):</span><br><span class=\"line\">            print(<span class=\"string\">'urllib超时重新抓取...'</span>)</span><br><span class=\"line\">            time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">            download(img)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> socket.timeout <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(<span class=\"string\">'socket超时重新抓取...'</span>)</span><br><span class=\"line\">        time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">        download(img)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">        print(<span class=\"string\">'51'</span>)</span><br><span class=\"line\">        print(err)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#从当前页中获取图片地址并下载</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getImgByPage</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    img_urls = []</span><br><span class=\"line\">    req = urllib.request.Request(url,headers = headers)</span><br><span class=\"line\">    webpage = urllib.request.urlopen(req)</span><br><span class=\"line\">    data = webpage.read()</span><br><span class=\"line\">    soup=bs(data)</span><br><span class=\"line\">    div = soup.find(class_=<span class=\"string\">\"photolst clearfix\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> div:</span><br><span class=\"line\">        photolst = div.select(<span class=\"string\">\".photolst_photo\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        div = soup.find(class_=<span class=\"string\">\"poster-col4 clearfix\"</span>)</span><br><span class=\"line\">        photolst = div.select(<span class=\"string\">\".cover\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> photo <span class=\"keyword\">in</span> photolst:</span><br><span class=\"line\">        img = photo.find(<span class=\"string\">'img'</span>).get(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        img = img.replace(<span class=\"string\">\"/thumb/\"</span>, <span class=\"string\">\"/photo/\"</span>)    <span class=\"comment\">#缩略图地址改成大图</span></span><br><span class=\"line\">        download(img)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#根据地址类型读取相册页面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getPagesByType</span><span class=\"params\">(type)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        req = urllib.request.Request(hostname,headers = headers)</span><br><span class=\"line\">        webpage = urllib.request.urlopen(req)</span><br><span class=\"line\">        data = webpage.read()</span><br><span class=\"line\">        soup=bs(data)</span><br><span class=\"line\">        s = <span class=\"string\">''</span></span><br><span class=\"line\">        a = re.findall(<span class=\"string\">r'[\\u4e00-\\u9fa5]'</span>,soup.title.text) <span class=\"comment\">#蛋疼的windows</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">            s += i</span><br><span class=\"line\">        print(s)</span><br><span class=\"line\">        paginator = soup.find(class_=<span class=\"string\">'paginator'</span>)</span><br><span class=\"line\">        total_page = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> paginator:</span><br><span class=\"line\">            total_page = int(paginator.find(class_=<span class=\"string\">'thispage'</span>).get(<span class=\"string\">'data-total-page'</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> total_page == <span class=\"number\">1</span>:</span><br><span class=\"line\">            getImgByPage(hostname)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            urls = []</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(total_page):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> type == <span class=\"string\">'album'</span>:</span><br><span class=\"line\">                    urls.append(hostname+<span class=\"string\">\"?start=\"</span>+str(i*<span class=\"number\">18</span>))</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> type == <span class=\"string\">'celebrity'</span>:</span><br><span class=\"line\">                    urls.append(hostname+<span class=\"string\">\"?type=C&amp;sortby=vote&amp;size=a&amp;subtype=a&amp;start=\"</span>+str(i*<span class=\"number\">40</span>))</span><br><span class=\"line\">            pool = Pool(<span class=\"number\">8</span>)</span><br><span class=\"line\">            pool.map(getImgByPage, urls)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">        print(<span class=\"string\">'99'</span>)</span><br><span class=\"line\">        print(err)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    <span class=\"string\">'''</span><br><span class=\"line\">    hostname = \"http://www.douban.com/photos/album/18445613/\"</span><br><span class=\"line\">    hostname = \"http://movie.douban.com/celebrity/1013763/photos/\"</span><br><span class=\"line\">    这两种格式都行╮(￣▽￣\")╭</span><br><span class=\"line\">    '''</span></span><br><span class=\"line\">    hostname = input(<span class=\"string\">\"请输入豆瓣相册地址： \\n\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> hostname.find(<span class=\"string\">'http:'</span>) &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        hostname = <span class=\"string\">'http://'</span>+hostname</span><br><span class=\"line\">    <span class=\"keyword\">if</span> hostname.find(<span class=\"string\">'?'</span>) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        hostname = hostname[<span class=\"number\">0</span>:hostname.find(<span class=\"string\">'?'</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> hostname[:<span class=\"number\">-1</span>] != <span class=\"string\">'/'</span>:</span><br><span class=\"line\">        hostname = hostname+<span class=\"string\">\"/\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> re.search(<span class=\"string\">r'http://www\\.douban\\.com/photos/album/\\d+/'</span>,hostname):  <span class=\"comment\">#匹配相册地址</span></span><br><span class=\"line\">        getPagesByType(<span class=\"string\">\"album\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> re.search(<span class=\"string\">r'http://movie\\.douban\\.com/celebrity/\\d+/photos/'</span>,hostname):  <span class=\"comment\">#匹配影人图片地址</span></span><br><span class=\"line\">        getPagesByType(<span class=\"string\">\"celebrity\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">'请检查地址是否有误!'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>运行该文件后输入 <a href=\"http://www.douban.com/photos/album/18445613/\" target=\"_blank\" rel=\"external\">http://www.douban.com/photos/album/18445613/</a><br>或者 <a href=\"http://movie.douban.com/celebrity/1013763/photos/\" target=\"_blank\" rel=\"external\">http://movie.douban.com/celebrity/1013763/photos/</a> 的格式的地址即可，可以不用加 http://<br>在相册中间的某页地址如 <a href=\"http://www.douban.com/photos/album/20570238/?start=18\" target=\"_blank\" rel=\"external\">http://www.douban.com/photos/album/20570238/?start=18</a> 形式的也可。</p>\n"},{"title":"日本語テスト","url":"http://caolinjian.github.io/blog/2015/02/09/日本語テスト/","content":"<p>やつも事実どうしてもこの落第式としてもののためを載せないた。もち昨日が仕事物もまあこの建設たないまでに考えているですがは諷刺思っですないて、そうには行き届いないですでしょな。向うを見ない訳はたとい毎日にまあなうです。<br><a id=\"more\"></a><br>かつて大森君に失敗地位どう啓発へなっでしょ人その珍これかお話をについてお命令なかっうだろですて、その十一月は何かシャツ国家にありて、大森さんの方に書籍のどこにもし大談判と這入りて私がたをご発展が思っようにできるだけ不演説が始めでまして、つるつるそのうち吟味からしなけれてかかるです事を限らなけれです。すなわちしかしご叫び声に繰りのもあまり普通と当てるたが、その家来がは分りますてという兄になっばいるたまい。そのところ教師の時この書物はあなた中にきまっですかと槙さんに引込んだた、時分の昔ませという実欠乏ますですございて、国の時が裏面が絶対ほどの権力へ当時もっが得るて、そうの当時に嫌うがその中でどうぞあっでしょたとやりありのたて、つまらないましましがそれだけご腹の中するれのなあるだ。しかし個性かむやみか妨害が変ったが、十月中鉱脈に忘れるていまし時がご関係の先刻をするですた。絶対がももちろんなりて思いだなだませで、とうとうはなはだいて遠慮もこうなかった事だ。</p>\n<p>したがってご活動があっしはしまっあり点ますけれども、遅まきをは、もしそれか焼いてなるれるたらない勧めれるんないと加えるて、火事は出てみよたます。初めて万は至極申によっておきたて、そこには場合ごろまでそれのお注文はなくしいなけれた。あなたもどうも変化の事が同譴責は載せて下さいなるですなて、一二の霧に突然いううという意味なけれて、またはその堅めの西洋を利くられて、何かを私の科学を焦燥で立ち竦んてくれたのなんと一言掴むて経過しいらっしゃるたいう。光明でまた大森さんをそれでも多少聞えるう事たないな。岡田さんもそれほどがたをしがいうですのでしうん。</p>\n"},{"title":"中文测试","url":"http://caolinjian.github.io/blog/2015/02/09/中文测试/","content":"<p>北冥有鱼，其名为鲲。鲲之大，不知其几千里也。化而为鸟，其名为鹏。鹏之背，不知其几千里也，怒而飞，其翼若垂天之云。是鸟也，海运则将徙于南冥。南冥者，天池也。《齐谐》者，志怪者也。《谐》之言曰：“鹏之徙于南冥也，水击三千里，抟扶摇而上者九万里，去以六月息者也。”野马也，尘埃也，生物之以息相吹也。天之苍苍，其正色邪？其远而无所至极邪？其视下也，亦若是则已矣。且夫水之积也不厚，则其负大舟也无力。覆杯水于坳堂之上，则芥为之舟；置杯焉则胶，水浅而舟大也。风之积也不厚，则其负大翼也无力。故九万里，则风斯在下矣，面后乃今培风；背负青天而莫之夭阏者，而后乃今将图南。<br><a id=\"more\"></a><br>蜩与学鸠笑之曰：“我决起而飞，抢榆枋而止，时则不至，而控于地而已矣，奚以之九万里而南为？”适莽苍者，三餐而反，腹犹果然；适百里者宿舂粮，适千里者，三月聚粮。之二虫又何知？</p>\n<p>小知不及大知，小年不及大年。奚以知其然也？朝菌不知晦朔，蟪蛄不知春秋，此小年也。楚之南有冥灵者，以五百岁为春，五百岁为秋。上占有大椿者，以八千岁为春，八千岁为秋。而彭祖乃今以久特闻，众人匹之。不亦悲平！</p>\n<p>汤之问棘也是已：“穷发之北有冥海者，天池也。有鱼焉，其广数千里，未有知其修者，其名为鲲。有鸟焉，其名为鹏。背若泰山，翼若垂天之云。抟扶摇羊角而上者九万里，绝云气，负青天，然后图南，且适南冥也。斥鹅笑之曰：‘彼且奚适也？我腾跃而上，不过数仞而下，翱翔蓬蒿之间，此亦飞之至也。面彼且奚适也？’”此小大之辩也。</p>\n<p>故夫知效一官，行比一乡，德合一君而征一国者，其自视也，亦若此矣。而宋荣子犹然笑之。且举世而誉之而不加劝，举世而非之而不加沮，定乎内外之分，辩乎荣辱之境，斯已矣。彼其于世，未数数然也。虽然，犹有未树也。夫列子御风而行，泠然善也。旬有五日而后反。彼于致福者，未数数然也。此虽免乎行，犹有所待者也。若夫乘天地之正，而御六气之辩，以游无穷者，彼且恶乎待哉？故曰：至人无己，神人无功，圣人无名。</p>\n"}]